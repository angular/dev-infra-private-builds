/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { CheckTargetBranchesModule } from './check-target-branches/cli';
import { CheckoutCommandModule } from './checkout/cli';
import { buildDiscoverNewConflictsCommand, handleDiscoverNewConflictsCommand } from './discover-new-conflicts/cli';
import { MergeCommandModule } from './merge/cli';
import { buildRebaseCommand, handleRebaseCommand } from './rebase/cli';
/** Build the parser for pull request commands. */
export function buildPrParser(localYargs) {
    return localYargs.help()
        .strict()
        .demandCommand()
        .command('discover-new-conflicts <pr-number>', 'Check if a pending PR causes new conflicts for other pending PRs', buildDiscoverNewConflictsCommand, handleDiscoverNewConflictsCommand)
        .command('rebase <pr-number>', 'Rebase a pending PR and push the rebased commits back to Github', buildRebaseCommand, handleRebaseCommand)
        .command(MergeCommandModule)
        .command(CheckoutCommandModule)
        .command(CheckTargetBranchesModule);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZGV2LWluZnJhL3ByL2NsaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFJSCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUMsZ0NBQWdDLEVBQUUsaUNBQWlDLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUNqSCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFDLGtCQUFrQixFQUFFLG1CQUFtQixFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRXJFLGtEQUFrRDtBQUNsRCxNQUFNLFVBQVUsYUFBYSxDQUFDLFVBQXNCO0lBQ2xELE9BQU8sVUFBVSxDQUFDLElBQUksRUFBRTtTQUNuQixNQUFNLEVBQUU7U0FDUixhQUFhLEVBQUU7U0FDZixPQUFPLENBQ0osb0NBQW9DLEVBQ3BDLGtFQUFrRSxFQUNsRSxnQ0FBZ0MsRUFBRSxpQ0FBaUMsQ0FBQztTQUN2RSxPQUFPLENBQ0osb0JBQW9CLEVBQUUsaUVBQWlFLEVBQ3ZGLGtCQUFrQixFQUFFLG1CQUFtQixDQUFDO1NBQzNDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztTQUMzQixPQUFPLENBQUMscUJBQXFCLENBQUM7U0FDOUIsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDMUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQgKiBhcyB5YXJncyBmcm9tICd5YXJncyc7XG5cbmltcG9ydCB7Q2hlY2tUYXJnZXRCcmFuY2hlc01vZHVsZX0gZnJvbSAnLi9jaGVjay10YXJnZXQtYnJhbmNoZXMvY2xpJztcbmltcG9ydCB7Q2hlY2tvdXRDb21tYW5kTW9kdWxlfSBmcm9tICcuL2NoZWNrb3V0L2NsaSc7XG5pbXBvcnQge2J1aWxkRGlzY292ZXJOZXdDb25mbGljdHNDb21tYW5kLCBoYW5kbGVEaXNjb3Zlck5ld0NvbmZsaWN0c0NvbW1hbmR9IGZyb20gJy4vZGlzY292ZXItbmV3LWNvbmZsaWN0cy9jbGknO1xuaW1wb3J0IHtNZXJnZUNvbW1hbmRNb2R1bGV9IGZyb20gJy4vbWVyZ2UvY2xpJztcbmltcG9ydCB7YnVpbGRSZWJhc2VDb21tYW5kLCBoYW5kbGVSZWJhc2VDb21tYW5kfSBmcm9tICcuL3JlYmFzZS9jbGknO1xuXG4vKiogQnVpbGQgdGhlIHBhcnNlciBmb3IgcHVsbCByZXF1ZXN0IGNvbW1hbmRzLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkUHJQYXJzZXIobG9jYWxZYXJnczogeWFyZ3MuQXJndikge1xuICByZXR1cm4gbG9jYWxZYXJncy5oZWxwKClcbiAgICAgIC5zdHJpY3QoKVxuICAgICAgLmRlbWFuZENvbW1hbmQoKVxuICAgICAgLmNvbW1hbmQoXG4gICAgICAgICAgJ2Rpc2NvdmVyLW5ldy1jb25mbGljdHMgPHByLW51bWJlcj4nLFxuICAgICAgICAgICdDaGVjayBpZiBhIHBlbmRpbmcgUFIgY2F1c2VzIG5ldyBjb25mbGljdHMgZm9yIG90aGVyIHBlbmRpbmcgUFJzJyxcbiAgICAgICAgICBidWlsZERpc2NvdmVyTmV3Q29uZmxpY3RzQ29tbWFuZCwgaGFuZGxlRGlzY292ZXJOZXdDb25mbGljdHNDb21tYW5kKVxuICAgICAgLmNvbW1hbmQoXG4gICAgICAgICAgJ3JlYmFzZSA8cHItbnVtYmVyPicsICdSZWJhc2UgYSBwZW5kaW5nIFBSIGFuZCBwdXNoIHRoZSByZWJhc2VkIGNvbW1pdHMgYmFjayB0byBHaXRodWInLFxuICAgICAgICAgIGJ1aWxkUmViYXNlQ29tbWFuZCwgaGFuZGxlUmViYXNlQ29tbWFuZClcbiAgICAgIC5jb21tYW5kKE1lcmdlQ29tbWFuZE1vZHVsZSlcbiAgICAgIC5jb21tYW5kKENoZWNrb3V0Q29tbWFuZE1vZHVsZSlcbiAgICAgIC5jb21tYW5kKENoZWNrVGFyZ2V0QnJhbmNoZXNNb2R1bGUpO1xufVxuIl19