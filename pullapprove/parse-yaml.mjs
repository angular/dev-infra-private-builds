/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { parse as parseYaml } from 'yaml';
import { PullApproveGroup } from './group';
export function parsePullApproveYaml(rawYaml) {
    return parseYaml(rawYaml, { merge: true });
}
/** Parses all of the groups defined in the pullapprove yaml. */
export function getGroupsFromYaml(pullApproveYamlRaw) {
    /** JSON representation of the pullapprove yaml file. */
    const pullApprove = parsePullApproveYaml(pullApproveYamlRaw);
    return Object.entries(pullApprove.groups).reduce((groups, [groupName, group]) => {
        return groups.concat(new PullApproveGroup(groupName, group, groups));
    }, []);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UteWFtbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Rldi1pbmZyYS9wdWxsYXBwcm92ZS9wYXJzZS15YW1sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBQyxLQUFLLElBQUksU0FBUyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQXlCekMsTUFBTSxVQUFVLG9CQUFvQixDQUFDLE9BQWU7SUFDbEQsT0FBTyxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFzQixDQUFDO0FBQ2hFLENBQUM7QUFFRCxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLGlCQUFpQixDQUFDLGtCQUEwQjtJQUMxRCx3REFBd0Q7SUFDeEQsTUFBTSxXQUFXLEdBQUcsb0JBQW9CLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUM3RCxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFO1FBQzlFLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDLEVBQUUsRUFBd0IsQ0FBQyxDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7cGFyc2UgYXMgcGFyc2VZYW1sfSBmcm9tICd5YW1sJztcbmltcG9ydCB7UHVsbEFwcHJvdmVHcm91cH0gZnJvbSAnLi9ncm91cCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHVsbEFwcHJvdmVHcm91cENvbmZpZyB7XG4gIGNvbmRpdGlvbnM/OiBzdHJpbmdbXTtcbiAgcmV2aWV3ZXJzPzoge1xuICAgIHVzZXJzOiBzdHJpbmdbXSxcbiAgICB0ZWFtcz86IHN0cmluZ1tdLFxuICB9fHtcbiAgICB0ZWFtczogc3RyaW5nW10sXG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHVsbEFwcHJvdmVDb25maWcge1xuICB2ZXJzaW9uOiBudW1iZXI7XG4gIGdpdGh1Yl9hcGlfdmVyc2lvbj86IHN0cmluZztcbiAgcHVsbGFwcHJvdmVfY29uZGl0aW9ucz86IHtcbiAgICBjb25kaXRpb246IHN0cmluZyxcbiAgICB1bm1ldF9zdGF0dXM6IHN0cmluZyxcbiAgICBleHBsYW5hdGlvbjogc3RyaW5nLFxuICB9W107XG4gIGdyb3Vwczoge1xuICAgIFtrZXk6IHN0cmluZ106IFB1bGxBcHByb3ZlR3JvdXBDb25maWcsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVB1bGxBcHByb3ZlWWFtbChyYXdZYW1sOiBzdHJpbmcpOiBQdWxsQXBwcm92ZUNvbmZpZyB7XG4gIHJldHVybiBwYXJzZVlhbWwocmF3WWFtbCwge21lcmdlOiB0cnVlfSkgYXMgUHVsbEFwcHJvdmVDb25maWc7XG59XG5cbi8qKiBQYXJzZXMgYWxsIG9mIHRoZSBncm91cHMgZGVmaW5lZCBpbiB0aGUgcHVsbGFwcHJvdmUgeWFtbC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRHcm91cHNGcm9tWWFtbChwdWxsQXBwcm92ZVlhbWxSYXc6IHN0cmluZyk6IFB1bGxBcHByb3ZlR3JvdXBbXSB7XG4gIC8qKiBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwdWxsYXBwcm92ZSB5YW1sIGZpbGUuICovXG4gIGNvbnN0IHB1bGxBcHByb3ZlID0gcGFyc2VQdWxsQXBwcm92ZVlhbWwocHVsbEFwcHJvdmVZYW1sUmF3KTtcbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHB1bGxBcHByb3ZlLmdyb3VwcykucmVkdWNlKChncm91cHMsIFtncm91cE5hbWUsIGdyb3VwXSkgPT4ge1xuICAgIHJldHVybiBncm91cHMuY29uY2F0KG5ldyBQdWxsQXBwcm92ZUdyb3VwKGdyb3VwTmFtZSwgZ3JvdXAsIGdyb3VwcykpO1xuICB9LCBbXSBhcyBQdWxsQXBwcm92ZUdyb3VwW10pO1xufVxuIl19