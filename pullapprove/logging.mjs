/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { info } from '../utils/console';
/** Create logs for each pullapprove group result. */
export function logGroup(group, conditionsToPrint, printMessageFn = info) {
    const conditions = group[conditionsToPrint];
    printMessageFn.group(`[${group.groupName}]`);
    if (conditions.length) {
        conditions.forEach(groupCondition => {
            const count = groupCondition.matchedFiles.size;
            if (conditionsToPrint === 'unverifiableConditions') {
                printMessageFn(`${groupCondition.expression}`);
            }
            else {
                printMessageFn(`${count} ${count === 1 ? 'match' : 'matches'} - ${groupCondition.expression}`);
            }
        });
        printMessageFn.groupEnd();
    }
}
/** Logs a header within a text drawn box. */
export function logHeader(...params) {
    const totalWidth = 80;
    const fillWidth = totalWidth - 2;
    const headerText = params.join(' ').substr(0, fillWidth);
    const leftSpace = Math.ceil((fillWidth - headerText.length) / 2);
    const rightSpace = fillWidth - leftSpace - headerText.length;
    const fill = (count, content) => content.repeat(count);
    info(`┌${fill(fillWidth, '─')}┐`);
    info(`│${fill(leftSpace, ' ')}${headerText}${fill(rightSpace, ' ')}│`);
    info(`└${fill(fillWidth, '─')}┘`);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Rldi1pbmZyYS9wdWxsYXBwcm92ZS9sb2dnaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQU10QyxxREFBcUQ7QUFDckQsTUFBTSxVQUFVLFFBQVEsQ0FDcEIsS0FBNkIsRUFBRSxpQkFBb0MsRUFBRSxjQUFjLEdBQUcsSUFBSTtJQUM1RixNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUM1QyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFDN0MsSUFBSSxVQUFVLENBQUMsTUFBTSxFQUFFO1FBQ3JCLFVBQVUsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUU7WUFDbEMsTUFBTSxLQUFLLEdBQUcsY0FBYyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7WUFDL0MsSUFBSSxpQkFBaUIsS0FBSyx3QkFBd0IsRUFBRTtnQkFDbEQsY0FBYyxDQUFDLEdBQUcsY0FBYyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7YUFDaEQ7aUJBQU07Z0JBQ0wsY0FBYyxDQUNWLEdBQUcsS0FBSyxJQUFJLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxNQUFNLGNBQWMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO2FBQ3JGO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDSCxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDM0I7QUFDSCxDQUFDO0FBRUQsNkNBQTZDO0FBQzdDLE1BQU0sVUFBVSxTQUFTLENBQUMsR0FBRyxNQUFnQjtJQUMzQyxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7SUFDdEIsTUFBTSxTQUFTLEdBQUcsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUNqQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDekQsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakUsTUFBTSxVQUFVLEdBQUcsU0FBUyxHQUFHLFNBQVMsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO0lBQzdELE1BQU0sSUFBSSxHQUFHLENBQUMsS0FBYSxFQUFFLE9BQWUsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUV2RSxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxHQUFHLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2RSxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7aW5mb30gZnJvbSAnLi4vdXRpbHMvY29uc29sZSc7XG5pbXBvcnQge1B1bGxBcHByb3ZlR3JvdXBSZXN1bHR9IGZyb20gJy4vZ3JvdXAnO1xuXG50eXBlIENvbmRpdGlvbkdyb3VwaW5nID0ga2V5b2YgUGljazxcbiAgICBQdWxsQXBwcm92ZUdyb3VwUmVzdWx0LCAnbWF0Y2hlZENvbmRpdGlvbnMnfCd1bm1hdGNoZWRDb25kaXRpb25zJ3wndW52ZXJpZmlhYmxlQ29uZGl0aW9ucyc+O1xuXG4vKiogQ3JlYXRlIGxvZ3MgZm9yIGVhY2ggcHVsbGFwcHJvdmUgZ3JvdXAgcmVzdWx0LiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvZ0dyb3VwKFxuICAgIGdyb3VwOiBQdWxsQXBwcm92ZUdyb3VwUmVzdWx0LCBjb25kaXRpb25zVG9QcmludDogQ29uZGl0aW9uR3JvdXBpbmcsIHByaW50TWVzc2FnZUZuID0gaW5mbykge1xuICBjb25zdCBjb25kaXRpb25zID0gZ3JvdXBbY29uZGl0aW9uc1RvUHJpbnRdO1xuICBwcmludE1lc3NhZ2VGbi5ncm91cChgWyR7Z3JvdXAuZ3JvdXBOYW1lfV1gKTtcbiAgaWYgKGNvbmRpdGlvbnMubGVuZ3RoKSB7XG4gICAgY29uZGl0aW9ucy5mb3JFYWNoKGdyb3VwQ29uZGl0aW9uID0+IHtcbiAgICAgIGNvbnN0IGNvdW50ID0gZ3JvdXBDb25kaXRpb24ubWF0Y2hlZEZpbGVzLnNpemU7XG4gICAgICBpZiAoY29uZGl0aW9uc1RvUHJpbnQgPT09ICd1bnZlcmlmaWFibGVDb25kaXRpb25zJykge1xuICAgICAgICBwcmludE1lc3NhZ2VGbihgJHtncm91cENvbmRpdGlvbi5leHByZXNzaW9ufWApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJpbnRNZXNzYWdlRm4oXG4gICAgICAgICAgICBgJHtjb3VudH0gJHtjb3VudCA9PT0gMSA/ICdtYXRjaCcgOiAnbWF0Y2hlcyd9IC0gJHtncm91cENvbmRpdGlvbi5leHByZXNzaW9ufWApO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHByaW50TWVzc2FnZUZuLmdyb3VwRW5kKCk7XG4gIH1cbn1cblxuLyoqIExvZ3MgYSBoZWFkZXIgd2l0aGluIGEgdGV4dCBkcmF3biBib3guICovXG5leHBvcnQgZnVuY3Rpb24gbG9nSGVhZGVyKC4uLnBhcmFtczogc3RyaW5nW10pIHtcbiAgY29uc3QgdG90YWxXaWR0aCA9IDgwO1xuICBjb25zdCBmaWxsV2lkdGggPSB0b3RhbFdpZHRoIC0gMjtcbiAgY29uc3QgaGVhZGVyVGV4dCA9IHBhcmFtcy5qb2luKCcgJykuc3Vic3RyKDAsIGZpbGxXaWR0aCk7XG4gIGNvbnN0IGxlZnRTcGFjZSA9IE1hdGguY2VpbCgoZmlsbFdpZHRoIC0gaGVhZGVyVGV4dC5sZW5ndGgpIC8gMik7XG4gIGNvbnN0IHJpZ2h0U3BhY2UgPSBmaWxsV2lkdGggLSBsZWZ0U3BhY2UgLSBoZWFkZXJUZXh0Lmxlbmd0aDtcbiAgY29uc3QgZmlsbCA9IChjb3VudDogbnVtYmVyLCBjb250ZW50OiBzdHJpbmcpID0+IGNvbnRlbnQucmVwZWF0KGNvdW50KTtcblxuICBpbmZvKGDilIwke2ZpbGwoZmlsbFdpZHRoLCAn4pSAJyl94pSQYCk7XG4gIGluZm8oYOKUgiR7ZmlsbChsZWZ0U3BhY2UsICcgJyl9JHtoZWFkZXJUZXh0fSR7ZmlsbChyaWdodFNwYWNlLCAnICcpfeKUgmApO1xuICBpbmZvKGDilJQke2ZpbGwoZmlsbFdpZHRoLCAn4pSAJyl94pSYYCk7XG59XG4iXX0=