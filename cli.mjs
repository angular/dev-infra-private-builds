#!/usr/bin/env node
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import * as yargs from 'yargs';
import { buildCaretakerParser } from './caretaker/cli';
import { buildCommitMessageParser } from './commit-message/cli';
import { buildFormatParser } from './format/cli';
import { buildNgbotParser } from './ngbot/cli';
import { buildPrParser } from './pr/cli';
import { buildPullapproveParser } from './pullapprove/cli';
import { buildReleaseParser } from './release/cli';
import { tsCircularDependenciesBuilder } from './ts-circular-dependencies/index';
import { captureLogOutputForCommand } from './utils/console';
import { buildMiscParser } from './misc/cli';
yargs.scriptName('ng-dev')
    .middleware(captureLogOutputForCommand)
    .demandCommand()
    .recommendCommands()
    .command('commit-message <command>', '', buildCommitMessageParser)
    .command('format <command>', '', buildFormatParser)
    .command('pr <command>', '', buildPrParser)
    .command('pullapprove <command>', '', buildPullapproveParser)
    .command('release <command>', '', buildReleaseParser)
    .command('ts-circular-deps <command>', '', tsCircularDependenciesBuilder)
    .command('caretaker <command>', '', buildCaretakerParser)
    .command('misc <command>', '', buildMiscParser)
    .command('ngbot <command>', false, buildNgbotParser)
    .wrap(120)
    .strict()
    .parse();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZGV2LWluZnJhL2NsaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7Ozs7OztHQU1HO0FBQ0gsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFFL0IsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDckQsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDOUQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQy9DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUM3QyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRSxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRTNDLEtBQUssQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO0tBQ3JCLFVBQVUsQ0FBQywwQkFBMEIsQ0FBQztLQUN0QyxhQUFhLEVBQUU7S0FDZixpQkFBaUIsRUFBRTtLQUNuQixPQUFPLENBQUMsMEJBQTBCLEVBQUUsRUFBRSxFQUFFLHdCQUF3QixDQUFDO0tBQ2pFLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLENBQUM7S0FDbEQsT0FBTyxDQUFDLGNBQWMsRUFBRSxFQUFFLEVBQUUsYUFBYSxDQUFDO0tBQzFDLE9BQU8sQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLEVBQUUsc0JBQXNCLENBQUM7S0FDNUQsT0FBTyxDQUFDLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxrQkFBa0IsQ0FBQztLQUNwRCxPQUFPLENBQUMsNEJBQTRCLEVBQUUsRUFBRSxFQUFFLDZCQUE2QixDQUFDO0tBQ3hFLE9BQU8sQ0FBQyxxQkFBcUIsRUFBRSxFQUFFLEVBQUUsb0JBQW9CLENBQUM7S0FDeEQsT0FBTyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxlQUFlLENBQUM7S0FDOUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQztLQUNuRCxJQUFJLENBQUMsR0FBRyxDQUFDO0tBQ1QsTUFBTSxFQUFFO0tBQ1IsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCAqIGFzIHlhcmdzIGZyb20gJ3lhcmdzJztcblxuaW1wb3J0IHtidWlsZENhcmV0YWtlclBhcnNlcn0gZnJvbSAnLi9jYXJldGFrZXIvY2xpJztcbmltcG9ydCB7YnVpbGRDb21taXRNZXNzYWdlUGFyc2VyfSBmcm9tICcuL2NvbW1pdC1tZXNzYWdlL2NsaSc7XG5pbXBvcnQge2J1aWxkRm9ybWF0UGFyc2VyfSBmcm9tICcuL2Zvcm1hdC9jbGknO1xuaW1wb3J0IHtidWlsZE5nYm90UGFyc2VyfSBmcm9tICcuL25nYm90L2NsaSc7XG5pbXBvcnQge2J1aWxkUHJQYXJzZXJ9IGZyb20gJy4vcHIvY2xpJztcbmltcG9ydCB7YnVpbGRQdWxsYXBwcm92ZVBhcnNlcn0gZnJvbSAnLi9wdWxsYXBwcm92ZS9jbGknO1xuaW1wb3J0IHtidWlsZFJlbGVhc2VQYXJzZXJ9IGZyb20gJy4vcmVsZWFzZS9jbGknO1xuaW1wb3J0IHt0c0NpcmN1bGFyRGVwZW5kZW5jaWVzQnVpbGRlcn0gZnJvbSAnLi90cy1jaXJjdWxhci1kZXBlbmRlbmNpZXMvaW5kZXgnO1xuaW1wb3J0IHtjYXB0dXJlTG9nT3V0cHV0Rm9yQ29tbWFuZH0gZnJvbSAnLi91dGlscy9jb25zb2xlJztcbmltcG9ydCB7YnVpbGRNaXNjUGFyc2VyfSBmcm9tICcuL21pc2MvY2xpJztcblxueWFyZ3Muc2NyaXB0TmFtZSgnbmctZGV2JylcbiAgICAubWlkZGxld2FyZShjYXB0dXJlTG9nT3V0cHV0Rm9yQ29tbWFuZClcbiAgICAuZGVtYW5kQ29tbWFuZCgpXG4gICAgLnJlY29tbWVuZENvbW1hbmRzKClcbiAgICAuY29tbWFuZCgnY29tbWl0LW1lc3NhZ2UgPGNvbW1hbmQ+JywgJycsIGJ1aWxkQ29tbWl0TWVzc2FnZVBhcnNlcilcbiAgICAuY29tbWFuZCgnZm9ybWF0IDxjb21tYW5kPicsICcnLCBidWlsZEZvcm1hdFBhcnNlcilcbiAgICAuY29tbWFuZCgncHIgPGNvbW1hbmQ+JywgJycsIGJ1aWxkUHJQYXJzZXIpXG4gICAgLmNvbW1hbmQoJ3B1bGxhcHByb3ZlIDxjb21tYW5kPicsICcnLCBidWlsZFB1bGxhcHByb3ZlUGFyc2VyKVxuICAgIC5jb21tYW5kKCdyZWxlYXNlIDxjb21tYW5kPicsICcnLCBidWlsZFJlbGVhc2VQYXJzZXIpXG4gICAgLmNvbW1hbmQoJ3RzLWNpcmN1bGFyLWRlcHMgPGNvbW1hbmQ+JywgJycsIHRzQ2lyY3VsYXJEZXBlbmRlbmNpZXNCdWlsZGVyKVxuICAgIC5jb21tYW5kKCdjYXJldGFrZXIgPGNvbW1hbmQ+JywgJycsIGJ1aWxkQ2FyZXRha2VyUGFyc2VyKVxuICAgIC5jb21tYW5kKCdtaXNjIDxjb21tYW5kPicsICcnLCBidWlsZE1pc2NQYXJzZXIpXG4gICAgLmNvbW1hbmQoJ25nYm90IDxjb21tYW5kPicsIGZhbHNlLCBidWlsZE5nYm90UGFyc2VyKVxuICAgIC53cmFwKDEyMClcbiAgICAuc3RyaWN0KClcbiAgICAucGFyc2UoKTtcbiJdfQ==