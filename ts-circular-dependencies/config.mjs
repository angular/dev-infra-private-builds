/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { dirname, isAbsolute, resolve } from 'path';
import { error } from '../utils/console';
/**
 * Loads the configuration for the circular dependencies test. If the config cannot be
 * loaded, an error will be printed and the process exists with a non-zero exit code.
 */
export function loadTestConfig(configPath) {
    const configBaseDir = dirname(configPath);
    const resolveRelativePath = (relativePath) => resolve(configBaseDir, relativePath);
    try {
        const config = require(configPath);
        if (!isAbsolute(config.baseDir)) {
            config.baseDir = resolveRelativePath(config.baseDir);
        }
        if (!isAbsolute(config.goldenFile)) {
            config.goldenFile = resolveRelativePath(config.goldenFile);
        }
        if (!isAbsolute(config.glob)) {
            config.glob = resolveRelativePath(config.glob);
        }
        return config;
    }
    catch (e) {
        error('Could not load test configuration file at: ' + configPath);
        error(`Failed with: ${e.message}`);
        process.exit(1);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZGV2LWluZnJhL3RzLWNpcmN1bGFyLWRlcGVuZGVuY2llcy9jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBRWxELE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQXlCdkM7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLGNBQWMsQ0FBQyxVQUFrQjtJQUMvQyxNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLFlBQW9CLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFFM0YsSUFBSTtRQUNGLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQW1DLENBQUM7UUFDckUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDdEQ7UUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNsQyxNQUFNLENBQUMsVUFBVSxHQUFHLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUM1RDtRQUNELElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzVCLE1BQU0sQ0FBQyxJQUFJLEdBQUcsbUJBQW1CLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsS0FBSyxDQUFDLDZDQUE2QyxHQUFHLFVBQVUsQ0FBQyxDQUFDO1FBQ2xFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDbkMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNqQjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHtkaXJuYW1lLCBpc0Fic29sdXRlLCByZXNvbHZlfSBmcm9tICdwYXRoJztcblxuaW1wb3J0IHtlcnJvcn0gZnJvbSAnLi4vdXRpbHMvY29uc29sZSc7XG5cbmltcG9ydCB7TW9kdWxlUmVzb2x2ZXJ9IGZyb20gJy4vYW5hbHl6ZXInO1xuXG5cbi8qKiBDb25maWd1cmF0aW9uIGZvciBhIGNpcmN1bGFyIGRlcGVuZGVuY2llcyB0ZXN0LiAqL1xuZXhwb3J0IGludGVyZmFjZSBDaXJjdWxhckRlcGVuZGVuY2llc1Rlc3RDb25maWcge1xuICAvKiogQmFzZSBkaXJlY3RvcnkgdXNlZCBmb3Igc2hvcnRlbmluZyBwYXRocyBpbiB0aGUgZ29sZGVuIGZpbGUuICovXG4gIGJhc2VEaXI6IHN0cmluZztcbiAgLyoqIFBhdGggdG8gdGhlIGdvbGRlbiBmaWxlIHRoYXQgaXMgdXNlZCBmb3IgY2hlY2tpbmcgYW5kIGFwcHJvdmluZy4gKi9cbiAgZ29sZGVuRmlsZTogc3RyaW5nO1xuICAvKiogR2xvYiB0aGF0IHJlc29sdmVzIHNvdXJjZSBmaWxlcyB3aGljaCBzaG91bGQgYmUgY2hlY2tlZC4gKi9cbiAgZ2xvYjogc3RyaW5nO1xuICAvKipcbiAgICogT3B0aW9uYWwgbW9kdWxlIHJlc29sdmVyIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVzb2x2ZSBtb2R1bGVzXG4gICAqIHRvIGFic29sdXRlIGZpbGUgcGF0aHMuXG4gICAqL1xuICByZXNvbHZlTW9kdWxlPzogTW9kdWxlUmVzb2x2ZXI7XG4gIC8qKlxuICAgKiBPcHRpb25hbCBjb21tYW5kIHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgaWYgdGhlIGdvbGRlbiBjaGVjayBmYWlsZWQuIFRoaXMgY2FuIGJlIHVzZWRcbiAgICogdG8gY29uc2lzdGVudGx5IHVzZSBzY3JpcHQgYWxpYXNlcyBmb3IgY2hlY2tpbmcvYXBwcm92aW5nIHRoZSBnb2xkZW4uXG4gICAqL1xuICBhcHByb3ZlQ29tbWFuZD86IHN0cmluZztcbn1cblxuLyoqXG4gKiBMb2FkcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNpcmN1bGFyIGRlcGVuZGVuY2llcyB0ZXN0LiBJZiB0aGUgY29uZmlnIGNhbm5vdCBiZVxuICogbG9hZGVkLCBhbiBlcnJvciB3aWxsIGJlIHByaW50ZWQgYW5kIHRoZSBwcm9jZXNzIGV4aXN0cyB3aXRoIGEgbm9uLXplcm8gZXhpdCBjb2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZFRlc3RDb25maWcoY29uZmlnUGF0aDogc3RyaW5nKTogQ2lyY3VsYXJEZXBlbmRlbmNpZXNUZXN0Q29uZmlnIHtcbiAgY29uc3QgY29uZmlnQmFzZURpciA9IGRpcm5hbWUoY29uZmlnUGF0aCk7XG4gIGNvbnN0IHJlc29sdmVSZWxhdGl2ZVBhdGggPSAocmVsYXRpdmVQYXRoOiBzdHJpbmcpID0+IHJlc29sdmUoY29uZmlnQmFzZURpciwgcmVsYXRpdmVQYXRoKTtcblxuICB0cnkge1xuICAgIGNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoY29uZmlnUGF0aCkgYXMgQ2lyY3VsYXJEZXBlbmRlbmNpZXNUZXN0Q29uZmlnO1xuICAgIGlmICghaXNBYnNvbHV0ZShjb25maWcuYmFzZURpcikpIHtcbiAgICAgIGNvbmZpZy5iYXNlRGlyID0gcmVzb2x2ZVJlbGF0aXZlUGF0aChjb25maWcuYmFzZURpcik7XG4gICAgfVxuICAgIGlmICghaXNBYnNvbHV0ZShjb25maWcuZ29sZGVuRmlsZSkpIHtcbiAgICAgIGNvbmZpZy5nb2xkZW5GaWxlID0gcmVzb2x2ZVJlbGF0aXZlUGF0aChjb25maWcuZ29sZGVuRmlsZSk7XG4gICAgfVxuICAgIGlmICghaXNBYnNvbHV0ZShjb25maWcuZ2xvYikpIHtcbiAgICAgIGNvbmZpZy5nbG9iID0gcmVzb2x2ZVJlbGF0aXZlUGF0aChjb25maWcuZ2xvYik7XG4gICAgfVxuICAgIHJldHVybiBjb25maWc7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBlcnJvcignQ291bGQgbm90IGxvYWQgdGVzdCBjb25maWd1cmF0aW9uIGZpbGUgYXQ6ICcgKyBjb25maWdQYXRoKTtcbiAgICBlcnJvcihgRmFpbGVkIHdpdGg6ICR7ZS5tZXNzYWdlfWApO1xuICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgfVxufVxuIl19