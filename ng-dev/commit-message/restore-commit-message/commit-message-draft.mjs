"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.saveCommitMessageDraft = exports.deleteCommitMessageDraft = exports.loadCommitMessageDraft = void 0;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const fs_1 = require("fs");
/** Load the commit message draft from the file system if it exists. */
function loadCommitMessageDraft(basePath) {
    const commitMessageDraftPath = `${basePath}.ngDevSave`;
    if ((0, fs_1.existsSync)(commitMessageDraftPath)) {
        return (0, fs_1.readFileSync)(commitMessageDraftPath).toString();
    }
    return '';
}
exports.loadCommitMessageDraft = loadCommitMessageDraft;
/** Remove the commit message draft from the file system. */
function deleteCommitMessageDraft(basePath) {
    const commitMessageDraftPath = `${basePath}.ngDevSave`;
    if ((0, fs_1.existsSync)(commitMessageDraftPath)) {
        (0, fs_1.unlinkSync)(commitMessageDraftPath);
    }
}
exports.deleteCommitMessageDraft = deleteCommitMessageDraft;
/** Save the commit message draft to the file system for later retrieval. */
function saveCommitMessageDraft(basePath, commitMessage) {
    (0, fs_1.writeFileSync)(`${basePath}.ngDevSave`, commitMessage);
}
exports.saveCommitMessageDraft = saveCommitMessageDraft;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWl0LW1lc3NhZ2UtZHJhZnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9uZy1kZXYvY29tbWl0LW1lc3NhZ2UvcmVzdG9yZS1jb21taXQtbWVzc2FnZS9jb21taXQtbWVzc2FnZS1kcmFmdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7Ozs7O0dBTUc7QUFDSCwyQkFBdUU7QUFFdkUsdUVBQXVFO0FBQ3ZFLFNBQWdCLHNCQUFzQixDQUFDLFFBQWdCO0lBQ3JELE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxRQUFRLFlBQVksQ0FBQztJQUN2RCxJQUFJLElBQUEsZUFBVSxFQUFDLHNCQUFzQixDQUFDLEVBQUU7UUFDdEMsT0FBTyxJQUFBLGlCQUFZLEVBQUMsc0JBQXNCLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztLQUN4RDtJQUNELE9BQU8sRUFBRSxDQUFDO0FBQ1osQ0FBQztBQU5ELHdEQU1DO0FBRUQsNERBQTREO0FBQzVELFNBQWdCLHdCQUF3QixDQUFDLFFBQWdCO0lBQ3ZELE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxRQUFRLFlBQVksQ0FBQztJQUN2RCxJQUFJLElBQUEsZUFBVSxFQUFDLHNCQUFzQixDQUFDLEVBQUU7UUFDdEMsSUFBQSxlQUFVLEVBQUMsc0JBQXNCLENBQUMsQ0FBQztLQUNwQztBQUNILENBQUM7QUFMRCw0REFLQztBQUVELDRFQUE0RTtBQUM1RSxTQUFnQixzQkFBc0IsQ0FBQyxRQUFnQixFQUFFLGFBQXFCO0lBQzVFLElBQUEsa0JBQWEsRUFBQyxHQUFHLFFBQVEsWUFBWSxFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBQ3hELENBQUM7QUFGRCx3REFFQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHtleGlzdHNTeW5jLCByZWFkRmlsZVN5bmMsIHVubGlua1N5bmMsIHdyaXRlRmlsZVN5bmN9IGZyb20gJ2ZzJztcblxuLyoqIExvYWQgdGhlIGNvbW1pdCBtZXNzYWdlIGRyYWZ0IGZyb20gdGhlIGZpbGUgc3lzdGVtIGlmIGl0IGV4aXN0cy4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2FkQ29tbWl0TWVzc2FnZURyYWZ0KGJhc2VQYXRoOiBzdHJpbmcpIHtcbiAgY29uc3QgY29tbWl0TWVzc2FnZURyYWZ0UGF0aCA9IGAke2Jhc2VQYXRofS5uZ0RldlNhdmVgO1xuICBpZiAoZXhpc3RzU3luYyhjb21taXRNZXNzYWdlRHJhZnRQYXRoKSkge1xuICAgIHJldHVybiByZWFkRmlsZVN5bmMoY29tbWl0TWVzc2FnZURyYWZ0UGF0aCkudG9TdHJpbmcoKTtcbiAgfVxuICByZXR1cm4gJyc7XG59XG5cbi8qKiBSZW1vdmUgdGhlIGNvbW1pdCBtZXNzYWdlIGRyYWZ0IGZyb20gdGhlIGZpbGUgc3lzdGVtLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUNvbW1pdE1lc3NhZ2VEcmFmdChiYXNlUGF0aDogc3RyaW5nKSB7XG4gIGNvbnN0IGNvbW1pdE1lc3NhZ2VEcmFmdFBhdGggPSBgJHtiYXNlUGF0aH0ubmdEZXZTYXZlYDtcbiAgaWYgKGV4aXN0c1N5bmMoY29tbWl0TWVzc2FnZURyYWZ0UGF0aCkpIHtcbiAgICB1bmxpbmtTeW5jKGNvbW1pdE1lc3NhZ2VEcmFmdFBhdGgpO1xuICB9XG59XG5cbi8qKiBTYXZlIHRoZSBjb21taXQgbWVzc2FnZSBkcmFmdCB0byB0aGUgZmlsZSBzeXN0ZW0gZm9yIGxhdGVyIHJldHJpZXZhbC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYXZlQ29tbWl0TWVzc2FnZURyYWZ0KGJhc2VQYXRoOiBzdHJpbmcsIGNvbW1pdE1lc3NhZ2U6IHN0cmluZykge1xuICB3cml0ZUZpbGVTeW5jKGAke2Jhc2VQYXRofS5uZ0RldlNhdmVgLCBjb21taXRNZXNzYWdlKTtcbn1cbiJdfQ==