{
  "version": 3,
  "sources": ["../../../../../node_modules/supports-color/index.js", "../../../../../node_modules/chalk/source/vendor/ansi-styles/index.js", "../../../../../node_modules/chalk/source/vendor/supports-color/index.js", "../../../../../node_modules/chalk/source/utilities.js", "../../../../../node_modules/chalk/source/index.js", "../../../../../ng-dev/utils/logging.ts", "../../../../../ng-dev/utils/child-process.ts", "../../../../../ng-dev/utils/repo-directory.ts", "../../../../../ng-dev/utils/config.ts", "../../../../../ng-dev/utils/config-cache.ts", "../../../../../ng-dev/release/config/index.ts"],
  "sourcesContent": ["import process from 'node:process';\nimport os from 'node:os';\nimport tty from 'node:tty';\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\nfunction hasFlag(flag, argv = process.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = process;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\t// Check for Azure DevOps pipelines\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nexport function createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: tty.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: tty.isatty(2)}),\n};\n\nexport default supportsColor;\n", "const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29],\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39],\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49],\n\t\t},\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue: code => {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n", "import process from 'node:process';\nimport os from 'node:os';\nimport tty from 'node:tty';\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\nfunction hasFlag(flag, argv = process.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = process;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\t// Check for Azure DevOps pipelines\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nexport function createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: tty.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: tty.isatty(2)}),\n};\n\nexport default supportsColor;\n", "// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n", "import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport chalk, {ChalkInstance} from 'chalk';\nimport {writeFileSync} from 'fs';\nimport {join} from 'path';\nimport {Arguments} from 'yargs';\nimport {determineRepoBaseDirFromCwd} from './repo-directory.js';\n\n/**\n * Supported levels for logging functions. Levels are mapped to\n * numbers to represent a hierarchy of logging levels.\n */\nexport enum LogLevel {\n  SILENT = 0,\n  ERROR = 1,\n  WARN = 2,\n  LOG = 3,\n  INFO = 4,\n  DEBUG = 5,\n}\n\n/** Default log level for the tool. */\nexport const DEFAULT_LOG_LEVEL = LogLevel.INFO;\n\n/** Reexport of chalk colors for convenient access. */\nexport const red = chalk.red;\nexport const reset = chalk.reset;\nexport const green = chalk.green;\nexport const yellow = chalk.yellow;\nexport const bold = chalk.bold;\nexport const blue = chalk.blue;\n\n/** Class used for logging to the console and to a ng-dev log file. */\nexport abstract class Log {\n  /** Write to the console for at INFO logging level */\n  static info = buildLogLevelFunction(() => console.info, LogLevel.INFO, null);\n\n  /** Write to the console for at ERROR logging level */\n  static error = buildLogLevelFunction(() => console.error, LogLevel.ERROR, chalk.red);\n\n  /** Write to the console for at DEBUG logging level */\n  static debug = buildLogLevelFunction(() => console.debug, LogLevel.DEBUG, null);\n\n  /** Write to the console for at LOG logging level */\n  static log = buildLogLevelFunction(() => console.log, LogLevel.LOG, null);\n\n  /** Write to the console for at WARN logging level */\n  static warn = buildLogLevelFunction(() => console.warn, LogLevel.WARN, chalk.yellow);\n}\n\n/** Build an instance of a logging function for the provided level. */\nfunction buildLogLevelFunction(\n  loadCommand: () => Function,\n  level: LogLevel,\n  defaultColor: ChalkInstance | null,\n) {\n  /** Write to stdout for the LOG_LEVEL. */\n  const loggingFunction = (...values: unknown[]) => {\n    runConsoleCommand(\n      loadCommand,\n      level,\n      // For string values, apply the default color.\n      ...values.map((v) => (typeof v === 'string' && defaultColor ? defaultColor(v) : v)),\n    );\n  };\n\n  /** Start a group at the LOG_LEVEL, optionally starting it as collapsed. */\n  loggingFunction.group = (label: string, collapsed = false) => {\n    const command = collapsed ? console.groupCollapsed : console.group;\n    runConsoleCommand(() => command, level, defaultColor ? defaultColor(label) : label);\n  };\n\n  /** End the group at the LOG_LEVEL. */\n  loggingFunction.groupEnd = () => {\n    runConsoleCommand(() => console.groupEnd, level);\n  };\n\n  return loggingFunction;\n}\n\n/**\n * Run the console command provided, if the environments logging level greater than the\n * provided logging level.\n *\n * The loadCommand takes in a function which is called to retrieve the console.* function\n * to allow for jasmine spies to still work in testing.  Without this method of retrieval\n * the console.* function, the function is saved into the closure of the created logging\n * function before jasmine can spy.\n */\nfunction runConsoleCommand(loadCommand: () => Function, logLevel: LogLevel, ...text: unknown[]) {\n  if (getLogLevel() >= logLevel) {\n    loadCommand()(...text);\n  }\n  printToLogFile(logLevel, ...text);\n}\n\n/**\n * Retrieve the log level from environment variables, if the value found\n * based on the LOG_LEVEL environment variable is undefined, return the default\n * logging level.\n */\nfunction getLogLevel() {\n  const logLevelEnvValue: any = (process.env[`LOG_LEVEL`] || '').toUpperCase();\n  const logLevel = LogLevel[logLevelEnvValue];\n  if (logLevel === undefined) {\n    return DEFAULT_LOG_LEVEL;\n  }\n  return logLevel;\n}\n\n/** All text to write to the log file. */\nlet LOGGED_TEXT = '';\n/** Whether file logging as been enabled. */\nlet FILE_LOGGING_ENABLED = false;\n/**\n * The number of columns used in the prepended log level information on each line of the logging\n * output file.\n */\nconst LOG_LEVEL_COLUMNS = 7;\n\n/**\n * Enable writing the logged outputs to the log file on process exit, sets initial lines from the\n * command execution, containing information about the timing and command parameters.\n *\n * This is expected to be called only once during a command run, and should be called by the\n * middleware of yargs to enable the file logging before the rest of the command parsing and\n * response is executed.\n */\nexport async function captureLogOutputForCommand(argv: Arguments) {\n  if (FILE_LOGGING_ENABLED) {\n    throw Error('`captureLogOutputForCommand` cannot be called multiple times');\n  }\n\n  const repoDir = determineRepoBaseDirFromCwd();\n  /** The date time used for timestamping when the command was invoked. */\n  const now = new Date();\n  /** Header line to separate command runs in log files. */\n  const headerLine = Array(100).fill('#').join('');\n  LOGGED_TEXT += `${headerLine}\\nCommand: ${argv.$0} ${argv._.join(' ')}\\nRan at: ${now}\\n`;\n\n  // On process exit, write the logged output to the appropriate log files\n  process.on('exit', (code: number) => {\n    LOGGED_TEXT += `${headerLine}\\n`;\n    LOGGED_TEXT += `Command ran in ${new Date().getTime() - now.getTime()}ms\\n`;\n    LOGGED_TEXT += `Exit Code: ${code}\\n`;\n    /** Path to the log file location. */\n    const logFilePath = join(repoDir, '.ng-dev.log');\n\n    // Strip ANSI escape codes from log outputs.\n    LOGGED_TEXT = LOGGED_TEXT.replace(/\\x1B\\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]/g, '');\n\n    writeFileSync(logFilePath, LOGGED_TEXT);\n\n    // For failure codes greater than 1, the new logged lines should be written to a specific log\n    // file for the command run failure.\n    if (code > 1) {\n      const logFileName = `.ng-dev.err-${now.getTime()}.log`;\n      console.error(`Exit code: ${code}. Writing full log to ${logFileName}`);\n      writeFileSync(join(repoDir, logFileName), LOGGED_TEXT);\n    }\n  });\n\n  // Mark file logging as enabled to prevent the function from executing multiple times.\n  FILE_LOGGING_ENABLED = true;\n}\n\n/** Write the provided text to the log file, prepending each line with the log level.  */\nfunction printToLogFile(logLevel: LogLevel, ...text: unknown[]) {\n  const logLevelText = `${LogLevel[logLevel]}:`.padEnd(LOG_LEVEL_COLUMNS);\n  LOGGED_TEXT += text\n    .join(' ')\n    .split('\\n')\n    .map((l) => `${logLevelText} ${l}\\n`)\n    .join('');\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport supportsColor from 'supports-color';\nimport {\n  spawn as _spawn,\n  SpawnOptions as _SpawnOptions,\n  spawnSync as _spawnSync,\n  SpawnSyncOptions as _SpawnSyncOptions,\n} from 'child_process';\nimport {Log} from './logging.js';\n\n/** Interface describing the options for spawning a process synchronously. */\nexport interface SpawnSyncOptions extends Omit<_SpawnSyncOptions, 'shell' | 'stdio'> {\n  /** Whether to prevent exit codes being treated as failures. */\n  suppressErrorOnFailingExitCode?: boolean;\n}\n\n/** Interface describing the options for spawning a process. */\nexport interface SpawnOptions extends Omit<_SpawnOptions, 'shell' | 'stdio'> {\n  /** Console output mode. Defaults to \"enabled\". */\n  mode?: 'enabled' | 'silent' | 'on-error';\n  /** Whether to prevent exit codes being treated as failures. */\n  suppressErrorOnFailingExitCode?: boolean;\n  // Stdin text to provide to the process. The raw text will be written to `stdin` and then\n  // the stream is closed. This is equivalent to the `input` option from `SpawnSyncOption`.\n  input?: string;\n}\n\n/** Interface describing the options for spawning an interactive process. */\nexport type SpawnInteractiveCommandOptions = Omit<_SpawnOptions, 'shell' | 'stdio'>;\n\n/** Interface describing the result of a spawned process. */\nexport interface SpawnResult {\n  /** Captured stdout in string format. */\n  stdout: string;\n  /** Captured stderr in string format. */\n  stderr: string;\n  /** The exit code or signal of the process. */\n  status: number | NodeJS.Signals;\n}\n\n/** Class holding utilities for spawning child processes. */\nexport abstract class ChildProcess {\n  /**\n   * Spawns a given command with the specified arguments inside an interactive shell. All process\n   * stdin, stdout and stderr output is printed to the current console.\n   *\n   * @returns a Promise resolving on success, and rejecting on command failure with the status code.\n   */\n  static spawnInteractive(\n    command: string,\n    args: string[],\n    options: SpawnInteractiveCommandOptions = {},\n  ) {\n    return new Promise<void>((resolve, reject) => {\n      const commandText = `${command} ${args.join(' ')}`;\n      Log.debug(`Executing command: ${commandText}`);\n      const childProcess = _spawn(command, args, {...options, shell: true, stdio: 'inherit'});\n      // The `close` event is used because the process is guaranteed to have completed writing to\n      // stdout and stderr, using the `exit` event can cause inconsistent information in stdout and\n      // stderr due to a race condition around exiting.\n      childProcess.on('close', (status) => (status === 0 ? resolve() : reject(status)));\n    });\n  }\n\n  /**\n   * Spawns a given command with the specified arguments inside a shell. All process stdout\n   * output is captured and returned as resolution on completion. Depending on the chosen\n   * output mode, stdout/stderr output is also printed to the console, or only on error.\n   *\n   * @returns a Promise resolving with captured stdout and stderr on success. The promise\n   *   rejects on command failure.\n   */\n  static spawn(command: string, args: string[], options: SpawnOptions = {}): Promise<SpawnResult> {\n    return new Promise((resolve, reject) => {\n      const commandText = `${command} ${args.join(' ')}`;\n      const outputMode = options.mode;\n      const env = getEnvironmentForNonInteractiveSpawn(options.env);\n\n      Log.debug(`Executing command: ${commandText}`);\n\n      const childProcess = _spawn(command, args, {...options, env, shell: true, stdio: 'pipe'});\n      let logOutput = '';\n      let stdout = '';\n      let stderr = '';\n\n      // If provided, write `input` text to the process `stdin`.\n      if (options.input !== undefined) {\n        childProcess.stdin.write(options.input);\n        childProcess.stdin.end();\n      }\n\n      // Capture the stdout separately so that it can be passed as resolve value.\n      // This is useful if commands return parsable stdout.\n      childProcess.stderr.on('data', (message) => {\n        stderr += message;\n        logOutput += message;\n        // If console output is enabled, print the message directly to the stderr. Note that\n        // we intentionally print all output to stderr as stdout should not be polluted.\n        if (outputMode === undefined || outputMode === 'enabled') {\n          process.stderr.write(message);\n        }\n      });\n\n      childProcess.stdout.on('data', (message) => {\n        stdout += message;\n        logOutput += message;\n        // If console output is enabled, print the message directly to the stderr. Note that\n        // we intentionally print all output to stderr as stdout should not be polluted.\n        if (outputMode === undefined || outputMode === 'enabled') {\n          process.stderr.write(message);\n        }\n      });\n\n      // The `close` event is used because the process is guaranteed to have completed writing to\n      // stdout and stderr, using the `exit` event can cause inconsistent information in stdout and\n      // stderr due to a race condition around exiting.\n      childProcess.on('close', (exitCode, signal) => {\n        const exitDescription =\n          exitCode !== null ? `exit code \"${exitCode}\"` : `signal \"${signal}\"`;\n        const printFn = outputMode === 'on-error' ? Log.error : Log.debug;\n        const status = statusFromExitCodeAndSignal(exitCode, signal);\n\n        printFn(`Command \"${commandText}\" completed with ${exitDescription}.`);\n        printFn(`Process output: \\n${logOutput}`);\n\n        // On success, resolve the promise. Otherwise reject with the captured stderr\n        // and stdout log output if the output mode was set to `silent`.\n        if (status === 0 || options.suppressErrorOnFailingExitCode) {\n          resolve({stdout, stderr, status});\n        } else {\n          reject(outputMode === 'silent' ? logOutput : undefined);\n        }\n      });\n    });\n  }\n\n  /**\n   * Spawns a given command with the specified arguments inside a shell synchronously.\n   *\n   * @returns The command's stdout and stderr.\n   */\n  static spawnSync(command: string, args: string[], options: SpawnSyncOptions = {}): SpawnResult {\n    const commandText = `${command} ${args.join(' ')}`;\n    const env = getEnvironmentForNonInteractiveSpawn(options.env);\n\n    Log.debug(`Executing command: ${commandText}`);\n\n    const {\n      status: exitCode,\n      signal,\n      stdout,\n      stderr,\n    } = _spawnSync(command, args, {...options, env, encoding: 'utf8', shell: true, stdio: 'pipe'});\n\n    /** The status of the spawn result. */\n    const status = statusFromExitCodeAndSignal(exitCode, signal);\n\n    if (status === 0 || options.suppressErrorOnFailingExitCode) {\n      return {status, stdout, stderr};\n    }\n\n    throw new Error(stderr);\n  }\n}\n/**\n * Convert the provided exitCode and signal to a single status code.\n *\n * During `exit` node provides either a `code` or `signal`, one of which is guaranteed to be\n * non-null.\n *\n * For more details see: https://nodejs.org/api/child_process.html#child_process_event_exit\n */\nfunction statusFromExitCodeAndSignal(exitCode: number | null, signal: NodeJS.Signals | null) {\n  return exitCode ?? signal ?? -1;\n}\n\n/**\n * Gets a process environment object with defaults that can be used for\n * spawning non-interactive child processes.\n *\n * Currently we enable `FORCE_COLOR` since non-interactive spawn's with\n * non-inherited `stdio` will not have colors enabled due to a missing TTY.\n */\nfunction getEnvironmentForNonInteractiveSpawn(\n  userProvidedEnv?: NodeJS.ProcessEnv,\n): NodeJS.ProcessEnv {\n  // Pass through the color level from the TTY/process performing the `spawn` call.\n  const forceColorValue =\n    supportsColor.stdout !== false ? supportsColor.stdout.level.toString() : undefined;\n\n  return {FORCE_COLOR: forceColorValue, ...(userProvidedEnv ?? process.env)};\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChildProcess} from './child-process.js';\n\n/** Determines the repository base directory from the current working directory. */\nexport function determineRepoBaseDirFromCwd() {\n  const {stdout, stderr, status} = ChildProcess.spawnSync('git', ['rev-parse --show-toplevel']);\n  if (status !== 0) {\n    throw Error(\n      `Unable to find the path to the base directory of the repository.\\n` +\n        `Was the command run from inside of the repo?\\n\\n` +\n        `${stderr}`,\n    );\n  }\n  return stdout.trim();\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {pathToFileURL} from 'url';\nimport {join} from 'path';\nimport {Assertions, MultipleAssertions} from './config-assertions.js';\n\nimport {Log} from './logging.js';\nimport {getCachedConfig, setCachedConfig} from './config-cache.js';\nimport {determineRepoBaseDirFromCwd} from './repo-directory.js';\n\n/**\n * Type describing a ng-dev configuration.\n *\n * This is a branded type to ensure that we can safely assert an object\n * being a config object instead of it being e.g. a `Promise` object.\n */\nexport type NgDevConfig<T = {}> = T & {\n  __isNgDevConfigObject: boolean;\n};\n\n/**\n * Describes the Github configuration for dev-infra. This configuration is\n * used for API requests, determining the upstream remote, etc.\n */\nexport interface GithubConfig {\n  /** Owner name of the repository. */\n  owner: string;\n  /** Name of the repository. */\n  name: string;\n  /** Main branch name for the repository. */\n  mainBranchName: string;\n  /** If SSH protocol should be used for git interactions. */\n  useSsh?: boolean;\n  /** Whether the specified repository is private. */\n  private?: boolean;\n}\n\n/**\n * The filename expected for creating the ng-dev config, without the file\n * extension to allow either a typescript or javascript file to be used.\n */\nconst CONFIG_FILE_PATH = '.ng-dev/config.mjs';\n\n/**\n * The filename expected for local user config, without the file extension to allow a typescript,\n * javascript or json file to be used.\n */\nconst USER_CONFIG_FILE_PATH = '.ng-dev.user';\n\n/** The local user configuration for ng-dev. */\nlet userConfig: {[key: string]: any} | null = null;\n\n/**\n * Set the cached configuration object to be loaded later. Only to be used on\n * CI and test situations in which loading from the `.ng-dev/` directory is not possible.\n */\nexport const setConfig = setCachedConfig;\n\n/**\n * Get the configuration from the file system, returning the already loaded\n * copy if it is defined.\n */\nexport async function getConfig(): Promise<NgDevConfig>;\nexport async function getConfig(baseDir: string): Promise<NgDevConfig>;\nexport async function getConfig<A extends MultipleAssertions>(\n  assertions: A,\n): Promise<NgDevConfig<Assertions<A>>>;\nexport async function getConfig(baseDirOrAssertions?: unknown) {\n  let cachedConfig = getCachedConfig();\n\n  if (cachedConfig === null) {\n    let baseDir: string;\n    if (typeof baseDirOrAssertions === 'string') {\n      baseDir = baseDirOrAssertions;\n    } else {\n      baseDir = determineRepoBaseDirFromCwd();\n    }\n\n    // If the global config is not defined, load it from the file system.\n    // The full path to the configuration file.\n    const configPath = join(baseDir, CONFIG_FILE_PATH);\n    // Read the configuration and validate it before caching it for the future.\n    cachedConfig = await readConfigFile(configPath);\n\n    // Store the newly-read configuration in the cache.\n    setCachedConfig(cachedConfig);\n  }\n\n  if (Array.isArray(baseDirOrAssertions)) {\n    for (const assertion of baseDirOrAssertions) {\n      assertion(cachedConfig);\n    }\n  }\n\n  // Return a clone of the cached global config to ensure that a new instance of the config\n  // is returned each time, preventing unexpected effects of modifications to the config object.\n  return {...cachedConfig, __isNgDevConfigObject: true};\n}\n\n/**\n * Get the local user configuration from the file system, returning the already loaded copy if it is\n * defined.\n *\n * @returns The user configuration object, or an empty object if no user configuration file is\n * present. The object is an untyped object as there are no required user configurations.\n */\nexport async function getUserConfig() {\n  // If the global config is not defined, load it from the file system.\n  if (userConfig === null) {\n    // The full path to the configuration file.\n    const configPath = join(determineRepoBaseDirFromCwd(), USER_CONFIG_FILE_PATH);\n    // Set the global config object.\n    userConfig = await readConfigFile(configPath, true);\n  }\n  // Return a clone of the user config to ensure that a new instance of the config is returned\n  // each time, preventing unexpected effects of modifications to the config object.\n  return {...userConfig};\n}\n\n/** A standard error class to thrown during assertions while validating configuration. */\nexport class ConfigValidationError extends Error {\n  constructor(message?: string, public readonly errors: string[] = []) {\n    super(message);\n  }\n}\n\n/** Validate th configuration has been met for the ng-dev command. */\nexport function assertValidGithubConfig<T extends NgDevConfig>(\n  config: T & Partial<{github: GithubConfig}>,\n): asserts config is T & {github: GithubConfig} {\n  const errors: string[] = [];\n  // Validate the github configuration.\n  if (config.github === undefined) {\n    errors.push(`Github repository not configured. Set the \"github\" option.`);\n  } else {\n    if (config.github.name === undefined) {\n      errors.push(`\"github.name\" is not defined`);\n    }\n    if (config.github.owner === undefined) {\n      errors.push(`\"github.owner\" is not defined`);\n    }\n  }\n  if (errors.length) {\n    throw new ConfigValidationError('Invalid `github` configuration', errors);\n  }\n}\n\n/**\n * Resolves and reads the specified configuration file, optionally returning an empty object\n * if the configuration file cannot be read.\n */\nasync function readConfigFile(configPath: string, returnEmptyObjectOnError = false): Promise<{}> {\n  try {\n    // ESM imports expect a valid URL. On Windows, the disk name causes errors like:\n    // `ERR_UNSUPPORTED_ESM_URL_SCHEME: <..> Received protocol 'c:'`\n    return await import(pathToFileURL(configPath).toString());\n  } catch (e) {\n    if (returnEmptyObjectOnError) {\n      Log.debug(\n        `Could not read configuration file at ${configPath}, returning empty object instead.`,\n      );\n      Log.debug(e);\n      return {};\n    }\n    Log.error(`Could not read configuration file at ${configPath}.`);\n    Log.error(e);\n    process.exit(1);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// NOTE: This file is decoupled from `config.ts` and is mainly responsible for storing\n// the previously read configuration. It is a separate file to allow for it being a\n// separate Bazel target with reduced dependencies. This file is used in the overall\n// jasmine bootstrap logic and we wouldn't want to bring all of `ng-dev/utils`.\n\n/** The configuration for ng-dev. */\nlet cachedConfig: {} | null = null;\n\n/**\n * Set the cached configuration object to be loaded later. Only to be used on\n * CI and test situations in which loading from the `.ng-dev/` directory is not possible.\n */\nexport function setCachedConfig(config: {}): void {\n  cachedConfig = config;\n}\n\n/** Gets the cached configuration, or `null` if not set. */\nexport function getCachedConfig(): {} | null {\n  return cachedConfig;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommitFromGitLog} from '../../commit-message/parse.js';\nimport {ConfigValidationError, NgDevConfig} from '../../utils/config.js';\n\n/** Interface describing a built package. */\nexport interface BuiltPackage {\n  /** Name of the package. */\n  name: string;\n  /** Path to the package output directory. */\n  outputPath: string;\n}\n\n/** Interface describing a NPM package that will be released. */\nexport interface NpmPackage {\n  /** Name of the package. */\n  name: string;\n  /**\n   * Whether the package is experimental.\n   *\n   * Packages marked as experimental will use experimental SemVer versioning\n   * and will not have any LTS dist tags configured.\n   */\n  experimental?: boolean;\n}\n\n/** Configuration for staging and publishing a release. */\nexport interface ReleaseConfig {\n  /** Registry URL used for publishing release packages. Defaults to the NPM registry. */\n  publishRegistry?: string;\n  /**\n   * The representative NPM package for this project. The specified package will be used\n   * for querying the NPM registry to e.g. determine active LTS branches.\n   *\n   * A representative package is expected to be a long-standing, non-experimental package\n   * that is managed and released as part of the `ng-dev release` command.\n   */\n  representativeNpmPackage: string;\n  /** List of NPM packages that are published as part of this project. */\n  npmPackages: NpmPackage[];\n  /** Builds release packages and returns a list of paths pointing to the output. */\n  buildPackages: () => Promise<BuiltPackage[] | null>;\n  /** The list of github labels to add to the release PRs. */\n  releasePrLabels?: string[];\n  /** Configuration for creating release notes during publishing. */\n  releaseNotes?: ReleaseNotesConfig;\n  /**\n   * Optional function that can be provided to run checks for a version before\n   * it can be released.\n   *\n   * If provided, the release can occur when the promise resolves. Upon rejection,\n   * the release will abort the release and print the `ReleasePrecheckError` error.\n   */\n  prereleaseCheck?: (\n    newVersion: string,\n    builtPackagesWithInfo: BuiltPackageWithInfo[],\n  ) => Promise<void>;\n}\n\n/**\n * Type describing a built package with its associated NPM package info and package\n * content hash, useful for verifying its integrity or running custom prechecks.\n */\nexport interface BuiltPackageWithInfo extends BuiltPackage, NpmPackage {\n  /** A deterministic hash that can be used to verify the contents of the package. */\n  hash: string;\n}\n\n/** Configuration for creating release notes during publishing. */\nexport interface ReleaseNotesConfig {\n  /** Whether to prompt for and include a release title in the generated release notes. */\n  useReleaseTitle?: boolean;\n  /** List of commit scopes to exclude from generated release notes. */\n  hiddenScopes?: string[];\n  /** Optional function that can be used to categorize commits for the release notes. */\n  categorizeCommit?: (commit: CommitFromGitLog) => {\n    /**\n     * Name of the group the commit should be displayed within. If not specified,\n     * commits will be grouped based on their scope.\n     */\n    groupName?: string;\n    /**\n     * Description of the commit. This option allows consumers to incorporate additional\n     * information for commits that would otherwise not be captured.\n     *\n     * If not specified, the commit subject is used as description. i.e. the description does\n     * not include the type and scope. e.g. `fix(a): <desc>` will turn into `<desc>`.\n     */\n    description?: string;\n  };\n  /**\n   * List that can be set to control the order of how groups appear in the release\n   * notes. Elements in the list need to match with the groups as determined according\n   * to the `commitToGroup` option.\n   *\n   * Each group for the release notes, will appear in the order provided in `groupOrder`\n   * and any other groups will appear after these groups, sorted alphanumerically.\n   */\n  groupOrder?: string[];\n}\n\n/** Configuration for releases in the dev-infra configuration. */\nexport type DevInfraReleaseConfig = {release: ReleaseConfig};\n\n/** Asserts that the given configuration is a valid `DevInfraReleaseConfig`. */\nexport function assertValidReleaseConfig<T extends NgDevConfig>(\n  config: T & Partial<DevInfraReleaseConfig>,\n): asserts config is T & DevInfraReleaseConfig {\n  // List of errors encountered validating the config.\n  const errors: string[] = [];\n\n  if (config.release === undefined) {\n    throw new ConfigValidationError('No configuration provided for `release`');\n  }\n  if (config.release.representativeNpmPackage === undefined) {\n    errors.push(`No \"representativeNpmPackage\" configured for releasing.`);\n  }\n  if (config.release.npmPackages === undefined) {\n    errors.push(`No \"npmPackages\" configured for releasing.`);\n  }\n  if (config.release.buildPackages === undefined) {\n    errors.push(`No \"buildPackages\" function configured for releasing.`);\n  }\n\n  if (config.release.representativeNpmPackage && config.release.npmPackages) {\n    const representativePkgEntry = config.release.npmPackages.find(\n      (pkg) => pkg.name === config.release?.representativeNpmPackage,\n    );\n\n    if (representativePkgEntry === undefined) {\n      errors.push(\n        `Configured \"representativeNpmPackage\" (${representativePkgEntry}) does not match ` +\n          `a package in \"npmPackages\".`,\n      );\n    } else if (representativePkgEntry.experimental) {\n      errors.push(\n        `Configured \"representativeNpmPackage\" (${representativePkgEntry}) corresponds to an ` +\n          `experimental package. The representative NPM package is expected to be a ` +\n          `long-standing and non-experimental package of the project.`,\n      );\n    }\n  }\n\n  if (errors.length) {\n    throw new ConfigValidationError('Invalid `release` configuration', errors);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
