"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertValidMergeConfig = void 0;
const config_1 = require("../../utils/config");
/** Loads and validates the merge configuration. */
function assertValidMergeConfig(config) {
    const errors = [];
    if (config.merge === undefined) {
        throw new config_1.ConfigValidationError('No merge configuration found. Set the `merge` configuration.');
    }
    if (!config.merge.claSignedLabel) {
        errors.push('No CLA signed label configured.');
    }
    if (!config.merge.mergeReadyLabel) {
        errors.push('No merge ready label configured.');
    }
    if (config.merge.githubApiMerge === undefined) {
        errors.push('No explicit choice of merge strategy. Please set `githubApiMerge`.');
    }
    if (errors.length) {
        throw new config_1.ConfigValidationError('Invalid `merge` configuration', errors);
    }
}
exports.assertValidMergeConfig = assertValidMergeConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbmctZGV2L3ByL21lcmdlL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7OztHQU1HOzs7QUFFSCwrQ0FBdUU7QUFrRHZFLG1EQUFtRDtBQUNuRCxTQUFnQixzQkFBc0IsQ0FDcEMsTUFBeUM7SUFFekMsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxTQUFTLEVBQUU7UUFDOUIsTUFBTSxJQUFJLDhCQUFxQixDQUFDLDhEQUE4RCxDQUFDLENBQUM7S0FDakc7SUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUU7UUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0tBQ2hEO0lBQ0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFO1FBQ2pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0NBQWtDLENBQUMsQ0FBQztLQUNqRDtJQUNELElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxjQUFjLEtBQUssU0FBUyxFQUFFO1FBQzdDLE1BQU0sQ0FBQyxJQUFJLENBQUMsb0VBQW9FLENBQUMsQ0FBQztLQUNuRjtJQUVELElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRTtRQUNqQixNQUFNLElBQUksOEJBQXFCLENBQUMsK0JBQStCLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDMUU7QUFDSCxDQUFDO0FBckJELHdEQXFCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge0NvbmZpZ1ZhbGlkYXRpb25FcnJvciwgR2l0aHViQ29uZmlnfSBmcm9tICcuLi8uLi91dGlscy9jb25maWcnO1xuXG5pbXBvcnQge0dpdGh1YkFwaU1lcmdlU3RyYXRlZ3lDb25maWd9IGZyb20gJy4vc3RyYXRlZ2llcy9hcGktbWVyZ2UnO1xuXG4vKipcbiAqIFBvc3NpYmxlIG1lcmdlIG1ldGhvZHMgc3VwcG9ydGVkIGJ5IHRoZSBHaXRodWIgQVBJLlxuICogaHR0cHM6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbS92My9wdWxscy8jbWVyZ2UtYS1wdWxsLXJlcXVlc3QtbWVyZ2UtYnV0dG9uLlxuICovXG5leHBvcnQgdHlwZSBHaXRodWJBcGlNZXJnZU1ldGhvZCA9ICdtZXJnZScgfCAnc3F1YXNoJyB8ICdyZWJhc2UnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gZm9yIHRoZSBtZXJnZSBzY3JpcHQgd2l0aCBhbGwgcmVtb3RlIG9wdGlvbnMgc3BlY2lmaWVkLiBUaGVcbiAqIGRlZmF1bHQgYE1lcmdlQ29uZmlnYCBoYXMgZG9lcyBub3QgcmVxdWlyZSBhbnkgb2YgdGhlc2Ugb3B0aW9ucyBhcyBkZWZhdWx0c1xuICogYXJlIHByb3ZpZGVkIGJ5IHRoZSBjb21tb24gZGV2LWluZnJhIGdpdGh1YiBjb25maWd1cmF0aW9uLlxuICovXG5leHBvcnQgdHlwZSBNZXJnZUNvbmZpZ1dpdGhSZW1vdGUgPSBNZXJnZUNvbmZpZyAmIHtyZW1vdGU6IEdpdGh1YkNvbmZpZ307XG5cbi8qKiBDb25maWd1cmF0aW9uIGZvciB0aGUgbWVyZ2Ugc2NyaXB0LiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZXJnZUNvbmZpZyB7XG4gIC8qKlxuICAgKiBDb25maWd1cmF0aW9uIGZvciB0aGUgdXBzdHJlYW0gcmVtb3RlLiBBbGwgb2YgdGhlc2Ugb3B0aW9ucyBhcmUgb3B0aW9uYWwgYXNcbiAgICogZGVmYXVsdHMgYXJlIHByb3ZpZGVkIGJ5IHRoZSBjb21tb24gZGV2LWluZnJhIGdpdGh1YiBjb25maWd1cmF0aW9uLlxuICAgKi9cbiAgcmVtb3RlPzogR2l0aHViQ29uZmlnO1xuICAvKiogTGlzdCBvZiB0YXJnZXQgbGFiZWxzLiAqL1xuICBub1RhcmdldExhYmVsaW5nPzogYm9vbGVhbjtcbiAgLyoqIFJlcXVpcmVkIGJhc2UgY29tbWl0cyBmb3IgZ2l2ZW4gYnJhbmNoZXMuICovXG4gIHJlcXVpcmVkQmFzZUNvbW1pdHM/OiB7W2JyYW5jaE5hbWU6IHN0cmluZ106IHN0cmluZ307XG4gIC8qKiBQYXR0ZXJuIHRoYXQgbWF0Y2hlcyBsYWJlbHMgd2hpY2ggaW1wbHkgYSBzaWduZWQgQ0xBLiAqL1xuICBjbGFTaWduZWRMYWJlbDogc3RyaW5nIHwgUmVnRXhwO1xuICAvKiogUGF0dGVybiB0aGF0IG1hdGNoZXMgbGFiZWxzIHdoaWNoIGltcGx5IGEgbWVyZ2UgcmVhZHkgcHVsbCByZXF1ZXN0LiAqL1xuICBtZXJnZVJlYWR5TGFiZWw6IHN0cmluZyB8IFJlZ0V4cDtcbiAgLyoqIExhYmVsIHRoYXQgaXMgYXBwbGllZCB3aGVuIHNwZWNpYWwgYXR0ZW50aW9uIGZyb20gdGhlIGNhcmV0YWtlciBpcyByZXF1aXJlZC4gKi9cbiAgY2FyZXRha2VyTm90ZUxhYmVsPzogc3RyaW5nIHwgUmVnRXhwO1xuICAvKiogTGFiZWwgd2hpY2ggY2FuIGJlIGFwcGxpZWQgdG8gZml4dXAgY29tbWl0IG1lc3NhZ2VzIGluIHRoZSBtZXJnZSBzY3JpcHQuICovXG4gIGNvbW1pdE1lc3NhZ2VGaXh1cExhYmVsOiBzdHJpbmcgfCBSZWdFeHA7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHB1bGwgcmVxdWVzdHMgc2hvdWxkIGJlIG1lcmdlZCB1c2luZyB0aGUgR2l0aHViIEFQSS4gVGhpcyBjYW4gYmUgZW5hYmxlZFxuICAgKiBpZiBwcm9qZWN0cyB3YW50IHRvIGhhdmUgdGhlaXIgcHVsbCByZXF1ZXN0cyBzaG93IHVwIGFzIGBNZXJnZWRgIGluIHRoZSBHaXRodWIgVUkuXG4gICAqIFRoZSBkb3duc2lkZSBpcyB0aGF0IGZpeHVwIG9yIHNxdWFzaCBjb21taXRzIG5vIGxvbmdlciB3b3JrIGFzIHRoZSBHaXRodWIgQVBJIGRvZXNcbiAgICogbm90IHN1cHBvcnQgdGhpcy5cbiAgICovXG4gIGdpdGh1YkFwaU1lcmdlOiBmYWxzZSB8IEdpdGh1YkFwaU1lcmdlU3RyYXRlZ3lDb25maWc7XG4gIC8qKlxuICAgKiBMaXN0IG9mIGNvbW1pdCBzY29wZXMgd2hpY2ggYXJlIGV4ZW1wdGVkIGZyb20gdGFyZ2V0IGxhYmVsIGNvbnRlbnQgcmVxdWlyZW1lbnRzLiBpLmUuIG5vIGBmZWF0YFxuICAgKiBzY29wZXMgaW4gcGF0Y2ggYnJhbmNoZXMsIG5vIGJyZWFraW5nIGNoYW5nZXMgaW4gbWlub3Igb3IgcGF0Y2ggY2hhbmdlcy5cbiAgICovXG4gIHRhcmdldExhYmVsRXhlbXB0U2NvcGVzPzogc3RyaW5nW107XG59XG5cbi8qKiBMb2FkcyBhbmQgdmFsaWRhdGVzIHRoZSBtZXJnZSBjb25maWd1cmF0aW9uLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFZhbGlkTWVyZ2VDb25maWc8VD4oXG4gIGNvbmZpZzogVCAmIFBhcnRpYWw8e21lcmdlOiBNZXJnZUNvbmZpZ30+LFxuKTogYXNzZXJ0cyBjb25maWcgaXMgVCAmIHttZXJnZTogTWVyZ2VDb25maWd9IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBpZiAoY29uZmlnLm1lcmdlID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgQ29uZmlnVmFsaWRhdGlvbkVycm9yKCdObyBtZXJnZSBjb25maWd1cmF0aW9uIGZvdW5kLiBTZXQgdGhlIGBtZXJnZWAgY29uZmlndXJhdGlvbi4nKTtcbiAgfVxuXG4gIGlmICghY29uZmlnLm1lcmdlLmNsYVNpZ25lZExhYmVsKSB7XG4gICAgZXJyb3JzLnB1c2goJ05vIENMQSBzaWduZWQgbGFiZWwgY29uZmlndXJlZC4nKTtcbiAgfVxuICBpZiAoIWNvbmZpZy5tZXJnZS5tZXJnZVJlYWR5TGFiZWwpIHtcbiAgICBlcnJvcnMucHVzaCgnTm8gbWVyZ2UgcmVhZHkgbGFiZWwgY29uZmlndXJlZC4nKTtcbiAgfVxuICBpZiAoY29uZmlnLm1lcmdlLmdpdGh1YkFwaU1lcmdlID09PSB1bmRlZmluZWQpIHtcbiAgICBlcnJvcnMucHVzaCgnTm8gZXhwbGljaXQgY2hvaWNlIG9mIG1lcmdlIHN0cmF0ZWd5LiBQbGVhc2Ugc2V0IGBnaXRodWJBcGlNZXJnZWAuJyk7XG4gIH1cblxuICBpZiAoZXJyb3JzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBDb25maWdWYWxpZGF0aW9uRXJyb3IoJ0ludmFsaWQgYG1lcmdlYCBjb25maWd1cmF0aW9uJywgZXJyb3JzKTtcbiAgfVxufVxuIl19