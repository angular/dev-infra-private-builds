"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGroupsFromYaml = exports.parsePullApproveYaml = void 0;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const yaml_1 = require("yaml");
const group_1 = require("./group");
function parsePullApproveYaml(rawYaml) {
    return yaml_1.parse(rawYaml, { merge: true });
}
exports.parsePullApproveYaml = parsePullApproveYaml;
/** Parses all of the groups defined in the pullapprove yaml. */
function getGroupsFromYaml(pullApproveYamlRaw) {
    /** JSON representation of the pullapprove yaml file. */
    const pullApprove = parsePullApproveYaml(pullApproveYamlRaw);
    return Object.entries(pullApprove.groups).reduce((groups, [groupName, group]) => {
        return groups.concat(new group_1.PullApproveGroup(groupName, group, groups));
    }, []);
}
exports.getGroupsFromYaml = getGroupsFromYaml;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UteWFtbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL25nLWRldi9wdWxsYXBwcm92ZS9wYXJzZS15YW1sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7Ozs7R0FNRztBQUNILCtCQUF3QztBQUN4QyxtQ0FBeUM7QUEyQnpDLFNBQWdCLG9CQUFvQixDQUFDLE9BQWU7SUFDbEQsT0FBTyxZQUFTLENBQUMsT0FBTyxFQUFFLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFzQixDQUFDO0FBQ2hFLENBQUM7QUFGRCxvREFFQztBQUVELGdFQUFnRTtBQUNoRSxTQUFnQixpQkFBaUIsQ0FBQyxrQkFBMEI7SUFDMUQsd0RBQXdEO0lBQ3hELE1BQU0sV0FBVyxHQUFHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDN0QsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRTtRQUM5RSxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSx3QkFBZ0IsQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDdkUsQ0FBQyxFQUFFLEVBQXdCLENBQUMsQ0FBQztBQUMvQixDQUFDO0FBTkQsOENBTUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7cGFyc2UgYXMgcGFyc2VZYW1sfSBmcm9tICd5YW1sJztcbmltcG9ydCB7UHVsbEFwcHJvdmVHcm91cH0gZnJvbSAnLi9ncm91cCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHVsbEFwcHJvdmVHcm91cENvbmZpZyB7XG4gIGNvbmRpdGlvbnM/OiBzdHJpbmdbXTtcbiAgcmV2aWV3ZXJzPzpcbiAgICB8IHtcbiAgICAgICAgdXNlcnM6IHN0cmluZ1tdO1xuICAgICAgICB0ZWFtcz86IHN0cmluZ1tdO1xuICAgICAgfVxuICAgIHwge1xuICAgICAgICB0ZWFtczogc3RyaW5nW107XG4gICAgICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFB1bGxBcHByb3ZlQ29uZmlnIHtcbiAgdmVyc2lvbjogbnVtYmVyO1xuICBnaXRodWJfYXBpX3ZlcnNpb24/OiBzdHJpbmc7XG4gIHB1bGxhcHByb3ZlX2NvbmRpdGlvbnM/OiB7XG4gICAgY29uZGl0aW9uOiBzdHJpbmc7XG4gICAgdW5tZXRfc3RhdHVzOiBzdHJpbmc7XG4gICAgZXhwbGFuYXRpb246IHN0cmluZztcbiAgfVtdO1xuICBncm91cHM6IHtcbiAgICBba2V5OiBzdHJpbmddOiBQdWxsQXBwcm92ZUdyb3VwQ29uZmlnO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VQdWxsQXBwcm92ZVlhbWwocmF3WWFtbDogc3RyaW5nKTogUHVsbEFwcHJvdmVDb25maWcge1xuICByZXR1cm4gcGFyc2VZYW1sKHJhd1lhbWwsIHttZXJnZTogdHJ1ZX0pIGFzIFB1bGxBcHByb3ZlQ29uZmlnO1xufVxuXG4vKiogUGFyc2VzIGFsbCBvZiB0aGUgZ3JvdXBzIGRlZmluZWQgaW4gdGhlIHB1bGxhcHByb3ZlIHlhbWwuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0R3JvdXBzRnJvbVlhbWwocHVsbEFwcHJvdmVZYW1sUmF3OiBzdHJpbmcpOiBQdWxsQXBwcm92ZUdyb3VwW10ge1xuICAvKiogSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGUgcHVsbGFwcHJvdmUgeWFtbCBmaWxlLiAqL1xuICBjb25zdCBwdWxsQXBwcm92ZSA9IHBhcnNlUHVsbEFwcHJvdmVZYW1sKHB1bGxBcHByb3ZlWWFtbFJhdyk7XG4gIHJldHVybiBPYmplY3QuZW50cmllcyhwdWxsQXBwcm92ZS5ncm91cHMpLnJlZHVjZSgoZ3JvdXBzLCBbZ3JvdXBOYW1lLCBncm91cF0pID0+IHtcbiAgICByZXR1cm4gZ3JvdXBzLmNvbmNhdChuZXcgUHVsbEFwcHJvdmVHcm91cChncm91cE5hbWUsIGdyb3VwLCBncm91cHMpKTtcbiAgfSwgW10gYXMgUHVsbEFwcHJvdmVHcm91cFtdKTtcbn1cbiJdfQ==