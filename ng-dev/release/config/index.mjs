"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertValidReleaseConfig = void 0;
const config_1 = require("../../utils/config");
/** Asserts that the given configuration is a valid `DevInfraReleaseConfig`. */
function assertValidReleaseConfig(config) {
    // List of errors encountered validating the config.
    const errors = [];
    if (config.release === undefined) {
        throw new config_1.ConfigValidationError('No configuration provided for `release`');
    }
    if (config.release.npmPackages === undefined) {
        errors.push(`No "npmPackages" configured for releasing.`);
    }
    if (config.release.buildPackages === undefined) {
        errors.push(`No "buildPackages" function configured for releasing.`);
    }
    if (errors.length) {
        throw new config_1.ConfigValidationError('Invalid `release` configuration', errors);
    }
}
exports.assertValidReleaseConfig = assertValidReleaseConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9uZy1kZXYvcmVsZWFzZS9jb25maWcvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7R0FNRzs7O0FBR0gsK0NBQXlEO0FBNER6RCwrRUFBK0U7QUFDL0UsU0FBZ0Isd0JBQXdCLENBQ3RDLE1BQTBDO0lBRTFDLG9EQUFvRDtJQUNwRCxNQUFNLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFFNUIsSUFBSSxNQUFNLENBQUMsT0FBTyxLQUFLLFNBQVMsRUFBRTtRQUNoQyxNQUFNLElBQUksOEJBQXFCLENBQUMseUNBQXlDLENBQUMsQ0FBQztLQUM1RTtJQUVELElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEtBQUssU0FBUyxFQUFFO1FBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsNENBQTRDLENBQUMsQ0FBQztLQUMzRDtJQUNELElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEtBQUssU0FBUyxFQUFFO1FBQzlDLE1BQU0sQ0FBQyxJQUFJLENBQUMsdURBQXVELENBQUMsQ0FBQztLQUN0RTtJQUNELElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRTtRQUNqQixNQUFNLElBQUksOEJBQXFCLENBQUMsaUNBQWlDLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDNUU7QUFDSCxDQUFDO0FBbkJELDREQW1CQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge0NvbW1pdEZyb21HaXRMb2d9IGZyb20gJy4uLy4uL2NvbW1pdC1tZXNzYWdlL3BhcnNlJztcbmltcG9ydCB7Q29uZmlnVmFsaWRhdGlvbkVycm9yfSBmcm9tICcuLi8uLi91dGlscy9jb25maWcnO1xuXG4vKiogSW50ZXJmYWNlIGRlc2NyaWJpbmcgYSBidWlsdCBwYWNrYWdlLiAqL1xuZXhwb3J0IGludGVyZmFjZSBCdWlsdFBhY2thZ2Uge1xuICAvKiogTmFtZSBvZiB0aGUgcGFja2FnZS4gKi9cbiAgbmFtZTogc3RyaW5nO1xuICAvKiogUGF0aCB0byB0aGUgcGFja2FnZSBvdXRwdXQgZGlyZWN0b3J5LiAqL1xuICBvdXRwdXRQYXRoOiBzdHJpbmc7XG59XG5cbi8qKiBDb25maWd1cmF0aW9uIGZvciBzdGFnaW5nIGFuZCBwdWJsaXNoaW5nIGEgcmVsZWFzZS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVsZWFzZUNvbmZpZyB7XG4gIC8qKiBSZWdpc3RyeSBVUkwgdXNlZCBmb3IgcHVibGlzaGluZyByZWxlYXNlIHBhY2thZ2VzLiBEZWZhdWx0cyB0byB0aGUgTlBNIHJlZ2lzdHJ5LiAqL1xuICBwdWJsaXNoUmVnaXN0cnk/OiBzdHJpbmc7XG4gIC8qKiBMaXN0IG9mIE5QTSBwYWNrYWdlcyB0aGF0IGFyZSBwdWJsaXNoZWQgYXMgcGFydCBvZiB0aGlzIHByb2plY3QuICovXG4gIG5wbVBhY2thZ2VzOiBzdHJpbmdbXTtcbiAgLyoqIEJ1aWxkcyByZWxlYXNlIHBhY2thZ2VzIGFuZCByZXR1cm5zIGEgbGlzdCBvZiBwYXRocyBwb2ludGluZyB0byB0aGUgb3V0cHV0LiAqL1xuICBidWlsZFBhY2thZ2VzOiAoKSA9PiBQcm9taXNlPEJ1aWx0UGFja2FnZVtdIHwgbnVsbD47XG4gIC8qKiBUaGUgbGlzdCBvZiBnaXRodWIgbGFiZWxzIHRvIGFkZCB0byB0aGUgcmVsZWFzZSBQUnMuICovXG4gIHJlbGVhc2VQckxhYmVscz86IHN0cmluZ1tdO1xuICAvKiogQ29uZmlndXJhdGlvbiBmb3IgY3JlYXRpbmcgcmVsZWFzZSBub3RlcyBkdXJpbmcgcHVibGlzaGluZy4gKi9cbiAgcmVsZWFzZU5vdGVzPzogUmVsZWFzZU5vdGVzQ29uZmlnO1xufVxuXG4vKiogQ29uZmlndXJhdGlvbiBmb3IgY3JlYXRpbmcgcmVsZWFzZSBub3RlcyBkdXJpbmcgcHVibGlzaGluZy4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVsZWFzZU5vdGVzQ29uZmlnIHtcbiAgLyoqIFdoZXRoZXIgdG8gcHJvbXB0IGZvciBhbmQgaW5jbHVkZSBhIHJlbGVhc2UgdGl0bGUgaW4gdGhlIGdlbmVyYXRlZCByZWxlYXNlIG5vdGVzLiAqL1xuICB1c2VSZWxlYXNlVGl0bGU/OiBib29sZWFuO1xuICAvKiogTGlzdCBvZiBjb21taXQgc2NvcGVzIHRvIGV4Y2x1ZGUgZnJvbSBnZW5lcmF0ZWQgcmVsZWFzZSBub3Rlcy4gKi9cbiAgaGlkZGVuU2NvcGVzPzogc3RyaW5nW107XG4gIC8qKiBPcHRpb25hbCBmdW5jdGlvbiB0aGF0IGNhbiBiZSB1c2VkIHRvIGNhdGVnb3JpemUgY29tbWl0cyBmb3IgdGhlIHJlbGVhc2Ugbm90ZXMuICovXG4gIGNhdGVnb3JpemVDb21taXQ/OiAoY29tbWl0OiBDb21taXRGcm9tR2l0TG9nKSA9PiB7XG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgZ3JvdXAgdGhlIGNvbW1pdCBzaG91bGQgYmUgZGlzcGxheWVkIHdpdGhpbi4gSWYgbm90IHNwZWNpZmllZCxcbiAgICAgKiBjb21taXRzIHdpbGwgYmUgZ3JvdXBlZCBiYXNlZCBvbiB0aGVpciBzY29wZS5cbiAgICAgKi9cbiAgICBncm91cE5hbWU/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRGVzY3JpcHRpb24gb2YgdGhlIGNvbW1pdC4gVGhpcyBvcHRpb24gYWxsb3dzIGNvbnN1bWVycyB0byBpbmNvcnBvcmF0ZSBhZGRpdGlvbmFsXG4gICAgICogaW5mb3JtYXRpb24gZm9yIGNvbW1pdHMgdGhhdCB3b3VsZCBvdGhlcndpc2Ugbm90IGJlIGNhcHR1cmVkLlxuICAgICAqXG4gICAgICogSWYgbm90IHNwZWNpZmllZCwgdGhlIGNvbW1pdCBzdWJqZWN0IGlzIHVzZWQgYXMgZGVzY3JpcHRpb24uIGkuZS4gdGhlIGRlc2NyaXB0aW9uIGRvZXNcbiAgICAgKiBub3QgaW5jbHVkZSB0aGUgdHlwZSBhbmQgc2NvcGUuIGUuZy4gYGZpeChhKTogPGRlc2M+YCB3aWxsIHR1cm4gaW50byBgPGRlc2M+YC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgfTtcbiAgLyoqXG4gICAqIExpc3QgdGhhdCBjYW4gYmUgc2V0IHRvIGNvbnRyb2wgdGhlIG9yZGVyIG9mIGhvdyBncm91cHMgYXBwZWFyIGluIHRoZSByZWxlYXNlXG4gICAqIG5vdGVzLiBFbGVtZW50cyBpbiB0aGUgbGlzdCBuZWVkIHRvIG1hdGNoIHdpdGggdGhlIGdyb3VwcyBhcyBkZXRlcm1pbmVkIGFjY29yZGluZ1xuICAgKiB0byB0aGUgYGNvbW1pdFRvR3JvdXBgIG9wdGlvbi5cbiAgICpcbiAgICogRWFjaCBncm91cCBmb3IgdGhlIHJlbGVhc2Ugbm90ZXMsIHdpbGwgYXBwZWFyIGluIHRoZSBvcmRlciBwcm92aWRlZCBpbiBgZ3JvdXBPcmRlcmBcbiAgICogYW5kIGFueSBvdGhlciBncm91cHMgd2lsbCBhcHBlYXIgYWZ0ZXIgdGhlc2UgZ3JvdXBzLCBzb3J0ZWQgYWxwaGFudW1lcmljYWxseS5cbiAgICovXG4gIGdyb3VwT3JkZXI/OiBzdHJpbmdbXTtcbn1cblxuLyoqIENvbmZpZ3VyYXRpb24gZm9yIHJlbGVhc2VzIGluIHRoZSBkZXYtaW5mcmEgY29uZmlndXJhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIERldkluZnJhUmVsZWFzZUNvbmZpZyA9IHtyZWxlYXNlOiBSZWxlYXNlQ29uZmlnfTtcblxuLyoqIEFzc2VydHMgdGhhdCB0aGUgZ2l2ZW4gY29uZmlndXJhdGlvbiBpcyBhIHZhbGlkIGBEZXZJbmZyYVJlbGVhc2VDb25maWdgLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFZhbGlkUmVsZWFzZUNvbmZpZzxUPihcbiAgY29uZmlnOiBUICYgUGFydGlhbDxEZXZJbmZyYVJlbGVhc2VDb25maWc+LFxuKTogYXNzZXJ0cyBjb25maWcgaXMgVCAmIERldkluZnJhUmVsZWFzZUNvbmZpZyB7XG4gIC8vIExpc3Qgb2YgZXJyb3JzIGVuY291bnRlcmVkIHZhbGlkYXRpbmcgdGhlIGNvbmZpZy5cbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIGlmIChjb25maWcucmVsZWFzZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IENvbmZpZ1ZhbGlkYXRpb25FcnJvcignTm8gY29uZmlndXJhdGlvbiBwcm92aWRlZCBmb3IgYHJlbGVhc2VgJyk7XG4gIH1cblxuICBpZiAoY29uZmlnLnJlbGVhc2UubnBtUGFja2FnZXMgPT09IHVuZGVmaW5lZCkge1xuICAgIGVycm9ycy5wdXNoKGBObyBcIm5wbVBhY2thZ2VzXCIgY29uZmlndXJlZCBmb3IgcmVsZWFzaW5nLmApO1xuICB9XG4gIGlmIChjb25maWcucmVsZWFzZS5idWlsZFBhY2thZ2VzID09PSB1bmRlZmluZWQpIHtcbiAgICBlcnJvcnMucHVzaChgTm8gXCJidWlsZFBhY2thZ2VzXCIgZnVuY3Rpb24gY29uZmlndXJlZCBmb3IgcmVsZWFzaW5nLmApO1xuICB9XG4gIGlmIChlcnJvcnMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IENvbmZpZ1ZhbGlkYXRpb25FcnJvcignSW52YWxpZCBgcmVsZWFzZWAgY29uZmlndXJhdGlvbicsIGVycm9ycyk7XG4gIH1cbn1cbiJdfQ==