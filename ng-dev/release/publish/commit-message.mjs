"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getReleaseNoteCherryPickCommitMessage = exports.getCommitMessageForNextBranchMajorSwitch = exports.getCommitMessageForExceptionalNextVersionBump = exports.getCommitMessageForRelease = void 0;
/** Gets the commit message for a new release point in the project. */
function getCommitMessageForRelease(newVersion) {
    return `release: cut the v${newVersion} release`;
}
exports.getCommitMessageForRelease = getCommitMessageForRelease;
/**
 * Gets the commit message for an exceptional version bump in the next branch. The next
 * branch version will be bumped without the release being published in some situations.
 * More details can be found in the `MoveNextIntoFeatureFreeze` release action and in:
 * https://hackmd.io/2Le8leq0S6G_R5VEVTNK9A.
 */
function getCommitMessageForExceptionalNextVersionBump(newVersion) {
    return `release: bump the next branch to v${newVersion}`;
}
exports.getCommitMessageForExceptionalNextVersionBump = getCommitMessageForExceptionalNextVersionBump;
/**
 * Gets the commit message for a version update in the next branch to a major version. The next
 * branch version will be updated without the release being published if the branch is configured
 * as a major. More details can be found in the `ConfigureNextAsMajor` release action and in:
 * https://hackmd.io/2Le8leq0S6G_R5VEVTNK9A.
 */
function getCommitMessageForNextBranchMajorSwitch(newVersion) {
    return `release: switch the next branch to v${newVersion}`;
}
exports.getCommitMessageForNextBranchMajorSwitch = getCommitMessageForNextBranchMajorSwitch;
/** Gets the commit message for a release notes cherry-pick commit */
function getReleaseNoteCherryPickCommitMessage(newVersion) {
    return `docs: release notes for the v${newVersion} release`;
}
exports.getReleaseNoteCherryPickCommitMessage = getReleaseNoteCherryPickCommitMessage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWl0LW1lc3NhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9uZy1kZXYvcmVsZWFzZS9wdWJsaXNoL2NvbW1pdC1tZXNzYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7O0dBTUc7OztBQUlILHNFQUFzRTtBQUN0RSxTQUFnQiwwQkFBMEIsQ0FBQyxVQUF5QjtJQUNsRSxPQUFPLHFCQUFxQixVQUFVLFVBQVUsQ0FBQztBQUNuRCxDQUFDO0FBRkQsZ0VBRUM7QUFFRDs7Ozs7R0FLRztBQUNILFNBQWdCLDZDQUE2QyxDQUFDLFVBQXlCO0lBQ3JGLE9BQU8scUNBQXFDLFVBQVUsRUFBRSxDQUFDO0FBQzNELENBQUM7QUFGRCxzR0FFQztBQUVEOzs7OztHQUtHO0FBQ0gsU0FBZ0Isd0NBQXdDLENBQUMsVUFBeUI7SUFDaEYsT0FBTyx1Q0FBdUMsVUFBVSxFQUFFLENBQUM7QUFDN0QsQ0FBQztBQUZELDRGQUVDO0FBRUQscUVBQXFFO0FBQ3JFLFNBQWdCLHFDQUFxQyxDQUFDLFVBQXlCO0lBQzdFLE9BQU8sZ0NBQWdDLFVBQVUsVUFBVSxDQUFDO0FBQzlELENBQUM7QUFGRCxzRkFFQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQgKiBhcyBzZW12ZXIgZnJvbSAnc2VtdmVyJztcblxuLyoqIEdldHMgdGhlIGNvbW1pdCBtZXNzYWdlIGZvciBhIG5ldyByZWxlYXNlIHBvaW50IGluIHRoZSBwcm9qZWN0LiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbW1pdE1lc3NhZ2VGb3JSZWxlYXNlKG5ld1ZlcnNpb246IHNlbXZlci5TZW1WZXIpOiBzdHJpbmcge1xuICByZXR1cm4gYHJlbGVhc2U6IGN1dCB0aGUgdiR7bmV3VmVyc2lvbn0gcmVsZWFzZWA7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgY29tbWl0IG1lc3NhZ2UgZm9yIGFuIGV4Y2VwdGlvbmFsIHZlcnNpb24gYnVtcCBpbiB0aGUgbmV4dCBicmFuY2guIFRoZSBuZXh0XG4gKiBicmFuY2ggdmVyc2lvbiB3aWxsIGJlIGJ1bXBlZCB3aXRob3V0IHRoZSByZWxlYXNlIGJlaW5nIHB1Ymxpc2hlZCBpbiBzb21lIHNpdHVhdGlvbnMuXG4gKiBNb3JlIGRldGFpbHMgY2FuIGJlIGZvdW5kIGluIHRoZSBgTW92ZU5leHRJbnRvRmVhdHVyZUZyZWV6ZWAgcmVsZWFzZSBhY3Rpb24gYW5kIGluOlxuICogaHR0cHM6Ly9oYWNrbWQuaW8vMkxlOGxlcTBTNkdfUjVWRVZUTks5QS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbW1pdE1lc3NhZ2VGb3JFeGNlcHRpb25hbE5leHRWZXJzaW9uQnVtcChuZXdWZXJzaW9uOiBzZW12ZXIuU2VtVmVyKSB7XG4gIHJldHVybiBgcmVsZWFzZTogYnVtcCB0aGUgbmV4dCBicmFuY2ggdG8gdiR7bmV3VmVyc2lvbn1gO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGNvbW1pdCBtZXNzYWdlIGZvciBhIHZlcnNpb24gdXBkYXRlIGluIHRoZSBuZXh0IGJyYW5jaCB0byBhIG1ham9yIHZlcnNpb24uIFRoZSBuZXh0XG4gKiBicmFuY2ggdmVyc2lvbiB3aWxsIGJlIHVwZGF0ZWQgd2l0aG91dCB0aGUgcmVsZWFzZSBiZWluZyBwdWJsaXNoZWQgaWYgdGhlIGJyYW5jaCBpcyBjb25maWd1cmVkXG4gKiBhcyBhIG1ham9yLiBNb3JlIGRldGFpbHMgY2FuIGJlIGZvdW5kIGluIHRoZSBgQ29uZmlndXJlTmV4dEFzTWFqb3JgIHJlbGVhc2UgYWN0aW9uIGFuZCBpbjpcbiAqIGh0dHBzOi8vaGFja21kLmlvLzJMZThsZXEwUzZHX1I1VkVWVE5LOUEuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb21taXRNZXNzYWdlRm9yTmV4dEJyYW5jaE1ham9yU3dpdGNoKG5ld1ZlcnNpb246IHNlbXZlci5TZW1WZXIpIHtcbiAgcmV0dXJuIGByZWxlYXNlOiBzd2l0Y2ggdGhlIG5leHQgYnJhbmNoIHRvIHYke25ld1ZlcnNpb259YDtcbn1cblxuLyoqIEdldHMgdGhlIGNvbW1pdCBtZXNzYWdlIGZvciBhIHJlbGVhc2Ugbm90ZXMgY2hlcnJ5LXBpY2sgY29tbWl0ICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVsZWFzZU5vdGVDaGVycnlQaWNrQ29tbWl0TWVzc2FnZShuZXdWZXJzaW9uOiBzZW12ZXIuU2VtVmVyKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBkb2NzOiByZWxlYXNlIG5vdGVzIGZvciB0aGUgdiR7bmV3VmVyc2lvbn0gcmVsZWFzZWA7XG59XG4iXX0=